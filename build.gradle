plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
//**    id 'org.asciidoctor.jvm.convert' version '3.3.2'
    id "org.springdoc.openapi-gradle-plugin" version "1.7.0"
}

group = 'by.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}


//**ext {
//    set('snippetsDir', file("build/generated-snippets"))
//    set('springCloudVersion', "2023.0.0")
//    set('springModulithVersion', "1.1.0")
//**}

ext['spring-security.version'] = '6.0.8'

dependencies {
    implementation "org.mapstruct:mapstruct:1.5.5.Final", "org.projectlombok:lombok:1.18.28"
    testImplementation 'junit:junit:4.13.1'
    annotationProcessor "org.mapstruct:mapstruct-processor:1.5.5.Final", "org.projectlombok:lombok:1.18.28", "org.projectlombok:lombok-mapstruct-binding:0.2.0"
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:1.5.5.Final"


//    implementation 'jakarta.persistence:jakarta.persistence-api:3.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'javax.xml.bind:jaxb-api:2.1'
    implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.5'
    implementation 'org.liquibase:liquibase-core'

//**    implementation 'org.springframework.boot:spring-boot-starter-web-services'
//*    implementation 'org.flywaydb:flyway-core'
//**    implementation 'org.springframework.cloud:spring-cloud-starter'
//**    implementation 'org.springframework.modulith:spring-modulith-starter-core'
//*  implementation 'org.springframework.modulith:spring-modulith-starter-jdbc'
//*    implementation 'org.springframework.modulith:spring-modulith-starter-jpa'
//**    implementation 'org.springframework.session:spring-session-jdbc'

    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
    implementation 'javax.servlet:javax.servlet-api:4.0.1'
    implementation 'org.apache.logging.log4j:log4j-api:2.22.1'
    implementation 'org.apache.logging.log4j:log4j-core:2.22.1'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
//**    testImplementation 'org.springframework.modulith:spring-modulith-starter-test'
//**    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
//**    testImplementation 'org.springframework.security:spring-security-test'
//**    testImplementation 'org.testcontainers:junit-jupiter'
//**    testImplementation 'org.testcontainers:postgresql'

}

dependencyManagement {
//    imports {
//        mavenBom "org.springframework.modulith:spring-modulith-bom:${springModulithVersion}"
//        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
//    }
}

tasks.named('test') {
//    outputs.dir snippetsDir
    useJUnitPlatform()
}

//**tasks.named('asciidoctor') {
//    inputs.dir snippetsDir
//    dependsOn test
//**}
